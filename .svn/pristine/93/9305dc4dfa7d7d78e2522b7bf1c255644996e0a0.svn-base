package com.mimi.baiguo.activity;

import java.util.Timer;
import java.util.TimerTask;

import com.mimi.baiguo.R;
import com.mimi.baiguo.util.SystemBarTintManager;
import com.mimi.baiguo.yindaoye.SwitchActivity;
import com.umeng.analytics.MobclickAgent;
import com.umeng.analytics.MobclickAgent.EScenarioType;
import com.umeng.analytics.MobclickAgent.UMAnalyticsConfig;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.view.Window;

/***
 * 首页
 * 
 * @author AAA
 * 
 */
public class IndexActivity extends Activity {

	/** 登录状态标识，false代表没登录，true代表已经登录 */
	String loginstate;
	private Boolean internet = true;
	private static SystemBarTintManager tintManager;

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);

		MobclickAgent.setCheckDevice(true);
		MobclickAgent.openActivityDurationTrack(false);
		MobclickAgent.setScenarioType(this, EScenarioType.E_UM_NORMAL);
		/*
		 * String appkey:官方申请的Appkey, String channel: 渠道号 EScenarioType eType:
		 * 场景模式，包含统计、游戏、统计盒子、游戏盒子, Boolean isCrashEnable: 可选初始化. 是否开启crash模式
		 */
		MobclickAgent.startWithConfigure(new UMAnalyticsConfig(this,
				getString(R.string.umeng_appkey),
				getString(R.string.UMENG_CHANNEL), EScenarioType.E_UM_NORMAL,
				true));

		SharedPreferences sp = getSharedPreferences("first",
				Context.MODE_APPEND);
		String first = sp.getString("first", "");
		if (!first.equals("true")) {
			Intent intent = new Intent(IndexActivity.this, SwitchActivity.class);
			startActivity(intent);
			return;
		}
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		tintManager = new SystemBarTintManager(this);
		tintManager.setStatusBarTintEnabled(true);
		tintManager.setStatusBarTintResource(R.color.text_white);
		setContentView(R.layout.activity_index);
		getHomeActivity();

	}

	/**
	 * 界面等待0.5秒直接跳转
	 */
	private void getHomeActivity() {
		final Intent localIntent = new Intent(this, LoginActivity.class);
		Timer timer = new Timer();
		TimerTask tast = new TimerTask() {
			@Override
			public void run() {
				if (internet == true) {
					startActivity(localIntent);
					finish();
				} else {
					android.os.Process.killProcess(android.os.Process.myPid());
				}
			}
		};
		timer.schedule(tast, 3000);

	}

	public void onResume() {
		super.onResume();
		MobclickAgent.onPageStart("StartActivity"); // 统计页面(仅有Activity的应用中SDK自动调用，不需要单独写)
		MobclickAgent.onResume(this); // 统计时长
	}

	public void onPause() {
		super.onPause();
		MobclickAgent.onPageEnd("StartActivity"); // （仅有Activity的应用中SDK自动调用，不需要单独写）
		MobclickAgent.onPause(this);
	}
}
